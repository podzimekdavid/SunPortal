// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SunPortal.Cloud.Service.Database.Data;

#nullable disable

namespace SunPortal.Cloud.Service.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230327143907_RemoveValue")]
    partial class RemoveValue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AllowedIpAddress")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.ClientDevice", b =>
                {
                    b.Property<Guid>("ClientDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Address")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<int>("SupportedDeviceId")
                        .HasColumnType("integer");

                    b.HasKey("ClientDeviceId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SupportedDeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.DeviceLog", b =>
                {
                    b.Property<int>("DeviceLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeviceLogId"));

                    b.Property<Guid>("ClientDeviceId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ParameterId")
                        .HasColumnType("integer");

                    b.HasKey("DeviceLogId");

                    b.HasIndex("ClientDeviceId");

                    b.HasIndex("ParameterId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.GroupChart", b =>
                {
                    b.Property<int>("GroupChartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupChartId"));

                    b.Property<int>("ParameterGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("YParameterId")
                        .HasColumnType("integer");

                    b.Property<int>("YType")
                        .HasColumnType("integer");

                    b.HasKey("GroupChartId");

                    b.HasIndex("ParameterGroupId");

                    b.HasIndex("YParameterId");

                    b.ToTable("Charts");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.Parameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<bool>("LogParameter")
                        .HasColumnType("boolean");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<int>("ParameterGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("ParameterId");

                    b.HasIndex("ParameterGroupId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.ParameterGroup", b =>
                {
                    b.Property<int>("ParameterGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ParameterGroupId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ParameterGroupId");

                    b.ToTable("ParameterGroups");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.SupportedDevice", b =>
                {
                    b.Property<int>("SupportedDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SupportedDeviceId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ManufactureWebsiteUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParameterGroupId")
                        .HasColumnType("integer");

                    b.HasKey("SupportedDeviceId");

                    b.HasIndex("ParameterGroupId");

                    b.ToTable("SupportedDevices");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.ClientDevice", b =>
                {
                    b.HasOne("SunPortal.Cloud.Service.Database.Data.Client", "Client")
                        .WithMany("Devices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SunPortal.Cloud.Service.Database.Data.SupportedDevice", "SupportedDevice")
                        .WithMany("Devices")
                        .HasForeignKey("SupportedDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("SupportedDevice");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.DeviceLog", b =>
                {
                    b.HasOne("SunPortal.Cloud.Service.Database.Data.ClientDevice", "ClientDevice")
                        .WithMany("Logs")
                        .HasForeignKey("ClientDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SunPortal.Cloud.Service.Database.Data.Parameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientDevice");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.GroupChart", b =>
                {
                    b.HasOne("SunPortal.Cloud.Service.Database.Data.ParameterGroup", "ParameterGroup")
                        .WithMany("Charts")
                        .HasForeignKey("ParameterGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SunPortal.Cloud.Service.Database.Data.Parameter", "YParameter")
                        .WithMany()
                        .HasForeignKey("YParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParameterGroup");

                    b.Navigation("YParameter");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.Parameter", b =>
                {
                    b.HasOne("SunPortal.Cloud.Service.Database.Data.ParameterGroup", "ParameterGroup")
                        .WithMany("Parameters")
                        .HasForeignKey("ParameterGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParameterGroup");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.SupportedDevice", b =>
                {
                    b.HasOne("SunPortal.Cloud.Service.Database.Data.ParameterGroup", "ParameterGroup")
                        .WithMany("SupportedDevices")
                        .HasForeignKey("ParameterGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParameterGroup");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.Client", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.ClientDevice", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.ParameterGroup", b =>
                {
                    b.Navigation("Charts");

                    b.Navigation("Parameters");

                    b.Navigation("SupportedDevices");
                });

            modelBuilder.Entity("SunPortal.Cloud.Service.Database.Data.SupportedDevice", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
