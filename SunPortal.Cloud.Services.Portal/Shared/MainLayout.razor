@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>SunPortal.Cloud.Services.Portal</PageTitle>
<MatThemeProvider Theme="@_theme">
    <MatDrawerContainer Style="width: 100vw; height: 100vh;">
        <MatDrawer @bind-Opened="@MenuOpen" Mode="@MatDrawerMode.Modal">
            <div style="margin: 60px">
                <MatNavMenu>
                    <MatNavItem Href="/" Title="Dashboard" OnClick="ToggleMenu">Dashboard</MatNavItem>
                    <MatNavItem Href="/SupportedDevices" Title="Catalog" OnClick="ToggleMenu">Catalog</MatNavItem>
                </MatNavMenu>
            </div>
        </MatDrawer>
        <MatDrawerContent>
            <MatAppBarContainer>
                <MatAppBar Fixed="true">
                    <MatAppBarRow>
                        <MatAppBarSection>
                            <MatIconButton Icon="menu" OnClick="ToggleMenu"></MatIconButton>
                            <MatAppBarTitle>SunPortal</MatAppBarTitle>
                        </MatAppBarSection>
                        <MatAppBarSection Align="@MatAppBarSectionAlign.End">

                        </MatAppBarSection>
                    </MatAppBarRow>
                </MatAppBar>
                <MatAppBarContent>
                    <main class="content">
                        <div class="container">
                            @Body
                        </div>
                    </main>
                </MatAppBarContent>
            </MatAppBarContainer>
        </MatDrawerContent>
    </MatDrawerContainer>
</MatThemeProvider>

@code{

    MatTheme _theme = new()
    {
        Primary = MatThemeColors.Orange._400.Value,
        Secondary = MatThemeColors.BlueGrey._500.Value
    };

    bool MenuOpen { get; set; }

    void ToggleMenu()
    {
        MenuOpen = !MenuOpen;
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            if (!state.User.Identity.IsAuthenticated)
            {
                NavigationManager.NavigateTo("/Identity/Account/Login", true);
            }
        }
    }

}