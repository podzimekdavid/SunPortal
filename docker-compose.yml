version: '3.8'
services:
  database-data:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: Cw4bUHEzMepVPaLH9vc
      POSTGRES_USER: SunPortal
      POSTGRES_DB: SunPortalDatabase
    ports:
      - "7779:5432" #temporary exposed (development)
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  database-users:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: AB8mQJvvzP9gvQBU
      POSTGRES_USER: SunPortal
      POSTGRES_DB: SunPortalDatabase
    ports:
      - "7789:5432" #temporary exposed (development)
    volumes:
      - database_account:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  portal:
    build:
      context: .
      dockerfile: SunPortal.Cloud.Services.Portal/Dockerfile
    restart: always
    volumes:
      - portal_persistent_storage:/app/data
    depends_on:
      rabbitmq:
        condition: service_healthy
      database-users:
        condition: service_healthy
  communication:
    build:
      context: .
      dockerfile: SunPortal.Cloud.Service.Communication/Dockerfile
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
  #    ports:
  #      - "9980:80"
  #      - "9443:443"
  database:
    build:
      context: .
      dockerfile: SunPortal.Cloud.Service.Database/Dockerfile
    restart: always
    ports:
      - "7799:80" #temporary exposed (development)
    depends_on:
      database-data:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  proxy:
    build:
      context: .
      dockerfile: SunPortal.Cloud.Proxy/Dockerfile
    restart: always
    volumes:
      - certs:/etc/proxy/certs
    ports:
      - "80:80"
      - "443:443"
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    restart: always
    ports:
      - "15672:15672"
    command: rabbitmq-server
#    environment:
#      - RABBITMQ_DEFAULT_USER=admin
#      - RABBITMQ_DEFAULT_PASS=Z5qTm4D95Ezv3Sf7
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
volumes:
  database_data:
  certs:
  portal_persistent_storage:
  rabbitmq_storage:
  database_account:

